var stringify = function(x){return JSON.stringify(x)}

// sample parameters to be estimated
var posteriors = Infer({method: "MCMC", samples: NUM_SAMPLES, lag: LAG, burn: BURN_IN, model: function(){

    var p = {
        // know_alpha: uniformDrift({a: 5, b: 10, w: 0.5}),
        // know_beta: uniformDrift({a: 0.8, b: 5, w: 0.5}),
        // think_alpha: uniformDrift({a: 0.8, b: 20, w: 0.2}),
        // think_beta: uniformDrift({a: 0.8, b: 20, w: 0.2}),
        bare_alpha: uniformDrift({a: 0.8, b: 20, w: 0.2}),
        bare_beta: uniformDrift({a: 0.8, b: 20, w: 0.2})
    }
    var m = extend(model(p)) 

    // var bare_thresholds = function(p) {
    //   return beta(p.bare_alpha, p.bare_beta)
    // }
    // console.log("bare thresholds: ", bare_thresholds)

    // var m = extend(model(bare_thresholds(p)))
    //   console.log(m)

    mapData({data: df}, function(d){
      // loop through the df dataframe. d: a row of the long-form empirical data
      var L0 = literalListener(d.utterance, d.item, m, p)
      // console.log("before sampling from the listenerDist ")
      observe(L0, d.speaker_response_bin)
      // console.log("done sampling from the listenerDist ")
  
    })
    
    return p
    
  }, verbose: true})
    
    
  posteriors