
var stringify = function (x) { return JSON.stringify(x) }
// speaker and attitude holder belief priors
// var beliefs = ["dances", "doesnt_dance"]
var beliefs = ["dances", "doesnt_dance", "uncertain"]
var ah_beliefs = ["dances", "doesnt_dance","uncertain", "null"]

var speaker_beliefPrior = function (item) {
  //   console.log(priors[item])
  return categorical({
    vs: beliefs,
    ps: speaker_priors[item]
  })
}

var ah_beliefPrior = function (item) {
  return categorical({
    vs: ah_beliefs,
    ps: ah_priors[item]
  })
}

var speaker_priors = {
  'Charley_H': [0.928571429, 0.019047619, 0.052380952],
  'Charley_L': [0.049327354, 0.778026906, 0.17264574],
  'Danny_H': [0.685446009, 0.028169014, 0.286384977],
  'Danny_L': [0.063636364, 0.804545455, 0.131818182],
  'Emily_H': [0.320930233, 0.234883721, 0.444186047],
  'Emily_L': [0.027522936, 0.926605505, 0.04587156],
  'Emma_H': [0.748267898, 0.046189376, 0.205542725],
  'Emma_L': [0.113163972, 0.722863741, 0.163972286],
  'Frank_H': [0.596371882, 0.047619048, 0.35600907],
  'Frank_L': [0.047058824, 0.924705882, 0.028235294],
  'Grace_H': [0.89010989, 0.021978022, 0.087912088],
  'Grace_L': [0.085158151, 0.829683698, 0.085158151],
  'Isabella_H': [0.194063927, 0.180365297, 0.625570776],
  'Isabella_L': [0.037383178, 0.929906542, 0.03271028],
  'Jackson_H': [0.880195599, 0.036674817, 0.083129584],
  'Jackson_L': [0.039387309, 0.916849015, 0.043763676],
  'Jayden_H': [0.660465116, 0.081395349, 0.258139535],
  'Jayden_L': [0.071100917, 0.876146789, 0.052752294],
  'Jon_H': [0.870503597, 0.038369305, 0.091127098],
  'Jon_L': [0.069042316, 0.873051225, 0.057906459],
  'Josh_H': [0.375280899, 0.217977528, 0.406741573],
  'Josh_L': [0.057007126, 0.836104513, 0.106888361],
  'Josie_H': [0.781456954, 0.033112583, 0.185430464],
  'Josie_L': [0.036319613, 0.91283293, 0.050847458],
  'Julian_H': [0.46728972, 0.10046729, 0.432242991],
  'Julian_L': [0.066210046, 0.625570776, 0.308219178],
  'Mary_H': [0.900232019, 0.055684455, 0.044083527],
  'Mary_L': [0.050574713, 0.887356322, 0.062068966],
  'Mia_H': [0.366197183, 0.171361502, 0.462441315],
  'Mia_L': [0.056818182, 0.847727273, 0.095454545],
  'Olivia_H': [0.79020979, 0.097902098, 0.111888112],
  'Olivia_L': [0.064073227, 0.874141876, 0.061784897],
  'Owen_H': [0.837471783, 0.036117381, 0.126410835],
  'Owen_L': [0.09929078, 0.806146572, 0.094562648],
  'Sophia_H': [0.571753986, 0.077448747, 0.350797267],
  'Sophia_L': [0.142857143, 0.566744731, 0.290398126],
  'Tony_H': [0.816666667, 0.023809524, 0.15952381],
  'Tony_L': [0.058295964, 0.883408072, 0.058295964],
  'Zoe_H': [0.852348993, 0.024608501, 0.123042506],
  'Zoe_L': [0.057279236, 0.904534606, 0.038186158]
}

// var speaker_priors = {
//   'Charley_H': [0.804632353, 0.195367647],
//   'Charley_L': [0.277066667, 0.722933333],
//   'Danny_H': [0.697062937, 0.302937063],
//   'Danny_L': [0.27993007, 0.72006993],
//   'Emily_H': [0.561555556, 0.438444444],
//   'Emily_L': [0.151655629, 0.848344371],
//   'Emma_H': [0.680763889, 0.319236111],
//   'Emma_L': [0.323098592, 0.676901408],
//   'Frank_H': [0.67972028, 0.32027972],
//   'Frank_L': [0.16965035, 0.83034965],
//   'Grace_H': [0.790144928, 0.209855072],
//   'Grace_L': [0.24777027, 0.75222973],
//   'Isabella_H': [0.517707006, 0.482292994],
//   'Isabella_L': [0.125813953, 0.874186047],
//   'Jackson_H': [0.774965035, 0.225034965],
//   'Jackson_L': [0.186013986, 0.813986014],
//   'Jayden_H': [0.687794118, 0.312205882],
//   'Jayden_L': [0.1756, 0.8244],
//   'Jon_H': [0.7559375, 0.2440625],
//   'Jon_L': [0.235696203, 0.764303797],
//   'Josh_H': [0.544575163, 0.455424837],
//   'Josh_L': [0.236917293, 0.763082707],
//   'Josie_H': [0.73343949, 0.26656051],
//   'Josie_L': [0.117286822, 0.882713178],
//   'Julian_H': [0.599493671, 0.400506329],
//   'Julian_L': [0.401796875, 0.598203125],
//   'Mary_H': [0.815167785, 0.184832215],
//   'Mary_L': [0.22540146, 0.77459854],
//   'Mia_H': [0.579022556, 0.420977444],
//   'Mia_L': [0.224901961, 0.775098039],
//   'Olivia_H': [0.664776119, 0.335223881],
//   'Olivia_L': [0.210592105, 0.789407895],
//   'Owen_H': [0.746482759, 0.253517241],
//   'Owen_L': [0.279503546, 0.720496454],
//   'Sophia_H': [0.634248366, 0.365751634],
//   'Sophia_L': [0.415413534, 0.584586466],
//   'Tony_H': [0.747279412, 0.252720588],
//   'Tony_L': [0.2196, 0.7804],
//   'Zoe_H': [0.745971223, 0.254028777],
//   'Zoe_L': [0.192108844, 0.807891156]
// }

var null_prob = .05
var ah_priors = {
  'Charley_H': [0.928571429, 0.019047619, 0.052380952,null_prob],
  'Charley_L': [0.049327354, 0.778026906, 0.17264574,null_prob],
  'Danny_H': [0.685446009, 0.028169014, 0.286384977,null_prob],
  'Danny_L': [0.063636364, 0.804545455, 0.131818182,null_prob],
  'Emily_H': [0.320930233, 0.234883721, 0.444186047,null_prob],
  'Emily_L': [0.027522936, 0.926605505, 0.04587156,null_prob],
  'Emma_H': [0.748267898, 0.046189376, 0.205542725,null_prob],
  'Emma_L': [0.113163972, 0.722863741, 0.163972286,null_prob],
  'Frank_H': [0.596371882, 0.047619048, 0.35600907,null_prob],
  'Frank_L': [0.047058824, 0.924705882, 0.028235294,null_prob],
  'Grace_H': [0.89010989, 0.021978022, 0.087912088,null_prob],
  'Grace_L': [0.085158151, 0.829683698, 0.085158151,null_prob],
  'Isabella_H': [0.194063927, 0.180365297, 0.625570776,null_prob],
  'Isabella_L': [0.037383178, 0.929906542, 0.03271028,null_prob],
  'Jackson_H': [0.880195599, 0.036674817, 0.083129584,null_prob],
  'Jackson_L': [0.039387309, 0.916849015, 0.043763676,null_prob],
  'Jayden_H': [0.660465116, 0.081395349, 0.258139535,null_prob],
  'Jayden_L': [0.071100917, 0.876146789, 0.052752294,null_prob],
  'Jon_H': [0.870503597, 0.038369305, 0.091127098,null_prob],
  'Jon_L': [0.069042316, 0.873051225, 0.057906459,null_prob],
  'Josh_H': [0.375280899, 0.217977528, 0.406741573,null_prob],
  'Josh_L': [0.057007126, 0.836104513, 0.106888361,null_prob],
  'Josie_H': [0.781456954, 0.033112583, 0.185430464,null_prob],
  'Josie_L': [0.036319613, 0.91283293, 0.050847458,null_prob],
  'Julian_H': [0.46728972, 0.10046729, 0.432242991,null_prob],
  'Julian_L': [0.066210046, 0.625570776, 0.308219178,null_prob],
  'Mary_H': [0.900232019, 0.055684455, 0.044083527,null_prob],
  'Mary_L': [0.050574713, 0.887356322, 0.062068966,null_prob],
  'Mia_H': [0.366197183, 0.171361502, 0.462441315,null_prob],
  'Mia_L': [0.056818182, 0.847727273, 0.095454545,null_prob],
  'Olivia_H': [0.79020979, 0.097902098, 0.111888112,null_prob],
  'Olivia_L': [0.064073227, 0.874141876, 0.061784897,null_prob],
  'Owen_H': [0.837471783, 0.036117381, 0.126410835,null_prob],
  'Owen_L': [0.09929078, 0.806146572, 0.094562648,null_prob],
  'Sophia_H': [0.571753986, 0.077448747, 0.350797267,null_prob],
  'Sophia_L': [0.142857143, 0.566744731, 0.290398126,null_prob],
  'Tony_H': [0.816666667, 0.023809524, 0.15952381,null_prob],
  'Tony_L': [0.058295964, 0.883408072, 0.058295964,null_prob],
  'Zoe_H': [0.852348993, 0.024608501, 0.123042506,null_prob],
  'Zoe_L': [0.057279236, 0.904534606, 0.038186158,null_prob]
}

// var ah_priors = {
//   'Charley_H': [0.804632353, 0.195367647, null_prob],
//   'Charley_L': [0.277066667, 0.722933333, null_prob],
//   'Danny_H': [0.697062937, 0.302937063, null_prob],
//   'Danny_L': [0.27993007, 0.72006993, null_prob],
//   'Emily_H': [0.561555556, 0.438444444, null_prob],
//   'Emily_L': [0.151655629, 0.848344371, null_prob],
//   'Emma_H': [0.680763889, 0.319236111, null_prob],
//   'Emma_L': [0.323098592, 0.676901408, null_prob],
//   'Frank_H': [0.67972028, 0.32027972, null_prob],
//   'Frank_L': [0.16965035, 0.83034965, null_prob],
//   'Grace_H': [0.790144928, 0.209855072, null_prob],
//   'Grace_L': [0.24777027, 0.75222973, null_prob],
//   'Isabella_H': [0.517707006, 0.482292994, null_prob],
//   'Isabella_L': [0.125813953, 0.874186047, null_prob],
//   'Jackson_H': [0.774965035, 0.225034965, null_prob],
//   'Jackson_L': [0.186013986, 0.813986014, null_prob],
//   'Jayden_H': [0.687794118, 0.312205882, null_prob],
//   'Jayden_L': [0.1756, 0.8244, null_prob],
//   'Jon_H': [0.7559375, 0.2440625, null_prob],
//   'Jon_L': [0.235696203, 0.764303797, null_prob],
//   'Josh_H': [0.544575163, 0.455424837, null_prob],
//   'Josh_L': [0.236917293, 0.763082707, null_prob],
//   'Josie_H': [0.73343949, 0.26656051, null_prob],
//   'Josie_L': [0.117286822, 0.882713178, null_prob],
//   'Julian_H': [0.599493671, 0.400506329, null_prob],
//   'Julian_L': [0.401796875, 0.598203125, null_prob],
//   'Mary_H': [0.815167785, 0.184832215, null_prob],
//   'Mary_L': [0.22540146, 0.77459854, null_prob],
//   'Mia_H': [0.579022556, 0.420977444, null_prob],
//   'Mia_L': [0.224901961, 0.775098039, null_prob],
//   'Olivia_H': [0.664776119, 0.335223881, null_prob],
//   'Olivia_L': [0.210592105, 0.789407895, null_prob],
//   'Owen_H': [0.746482759, 0.253517241, null_prob],
//   'Owen_L': [0.279503546, 0.720496454, null_prob],
//   'Sophia_H': [0.634248366, 0.365751634, null_prob],
//   'Sophia_L': [0.415413534, 0.584586466, null_prob],
//   'Tony_H': [0.747279412, 0.252720588, null_prob],
//   'Tony_L': [0.2196, 0.7804, null_prob],
//   'Zoe_H': [0.745971223, 0.254028777, null_prob],
//   'Zoe_L': [0.192108844, 0.807891156, null_prob]
// }


// specify utterance alternatives
var utterances = ["know-dances-?",
  "know-doesnt_dance-?",
  "think-dances-?",
  "think-doesnt_dance-?",
  "BARE-dances-?"]


// intuition:
// when the speaker belief is the same as the ah belief: more likely to use "know"

// from behavioral results:

// "BARE": the effect of prior is mitagted

// "know": the ah believes in the opposite of what is being uttered (especially when the embedded content is p)
// e.g., "know p?"-> ah is more likely to be considered to believe in not p, but speaker believes in p
// "think": the speaker believes in the opposite of what is being uttered (especially when the embedded content is p)
// e.g., "think p?" -> speaker is more likely to believe in not p, but ah slightly more likely to believe in p

// factivity: 
// "know": speaker belief is the same as the utterance 
// "think": speaker belief is the opposite of the utterances

// utterances: know p, know not p, think p, think not p, BARE
// seed6789
// var dances_dances_prob = [0.25, 0.04, 0.96, 0.37, 0.00]
// var dances_doesnt_prob = [0.41, 0.03, 0.23, 0.97, 0.00]

// var doesnt_dances_prob = [0.03, 0.34, 0.95, 0.21, 0.00]
// var doesnt_doesnt_prob = [0.05, 0.29, 0.91, 0.92, 0.00]

// var dances_na_prob = [0.002, 0.001, 0.009, 0.003, 0.934]
// var doesnt_na_prob = [0.001, 0.004, 0.005, 0.002, 0.954]


// see1234
// var dances_dances_prob = [0.71, 0.09, 0.92, 0.36, 0.00]
// var dances_doesnt_prob = [0.84, 0.04, 0.22, 0.96, 0.00]

// var doesnt_dances_prob = [0.02, 0.71, 0.85, 0.12, 0.00]
// var doesnt_doesnt_prob = [0.08, 0.94, 0.68, 0.77, 0.00]

// var dances_na_prob = [0.01, 0.04, 0.00, 0.01, 0.98]
// var doesnt_na_prob = [0.0005, 0.0005, 0.006, 0.0072, 0.71]

// seed1234 larger meaning space
var dances_dances_prob = [0.0638, 0.002, 0.984, 0.033, 0.001]
var dances_doesnt_prob = [0.231, 0.01, 0.129, 0.967, 0.00]

var doesnt_dances_prob = [0.005, 0.108, 0.977, 0.069, 0.001]
var doesnt_doesnt_prob = [0.003, 0.015, 0.987, 0.054, 0.00]

var dances_na_prob = [0.006, 0.000, 0.705, 0.007, 0.548]
var doesnt_na_prob = [0.000, 0.003, 0.957, 0.004, 0.196]

var uncertain_dances_prob = [0.02, 0.001, 0.979, 0.027,0.000]
var uncertain_doesnt_prob = [0.006, 0.002, 0.955, 0.118, 0.000]
var uncertain_uncertain_prob = [0.033, 0.167, 0.811, 0.247, 0.002]
var uncertain_na_prob = [0.006, 0.002, 0.004, 0.002, 0.968]

var dances_uncertain_prob = [0.92, 0.005, 0.951, 0.231, 0.000]
var doesnt_uncertain_prob = [0.009, 0.241, 0.946, 0.146, 0.000]




// var na_dances_prob = [0.017, 0.004, 0.029, 0.98, 0.000]
// var na_doesnt_prob = [0.004, 0.005, 0.012, 0.975, 0.000]
// var na_na_prob = [0.031, 0.035, 0.177, 0.817, 0.416]

var speaker = cache(function (belief_tuple) {
  var speaker_belief = belief_tuple.speaker_belief
  var ah_belief = belief_tuple.ah_belief

  if (speaker_belief == "dances" & ah_belief == "dances") {
    return Categorical({
      ps: dances_dances_prob,
      vs: utterances
    })
  }
  else if (speaker_belief == "dances" & ah_belief == "doesnt_dance") {
    return Categorical({
      ps: dances_doesnt_prob,
      vs: utterances
    })
  }
  else if (speaker_belief == "doesnt_dance" & ah_belief == "dances") {
    return Categorical({
      ps: doesnt_dances_prob,
      vs: utterances
    })
  }
  else if (speaker_belief == "doesnt_dance" & ah_belief == "doesnt_dance") {
    return Categorical({
      ps: doesnt_doesnt_prob,
      vs: utterances
    })
  }
  else if (speaker_belief == "dances" & ah_belief == "null") {
    return Categorical({
      ps: dances_na_prob,
      vs: utterances
    })
  }
  else if (speaker_belief == "doesnt_dance" & ah_belief == "null") {
    return Categorical({
      ps: doesnt_na_prob,
      vs: utterances
    })
  }

  else if (speaker_belief == "dances" & ah_belief == "uncertain") {
    return Categorical({
      ps: dances_uncertain_prob,
      vs: utterances
    })
  }
  else if (speaker_belief == "doesnt_dance" & ah_belief == "uncertain") {
    return Categorical({
      ps: doesnt_uncertain_prob,
      vs: utterances
    })
  }
  else if (speaker_belief == "uncertain" & ah_belief == "dances") {
    return Categorical({
      ps: uncertain_dances_prob,
      vs: utterances
    })
  }
  else if (speaker_belief == "uncertain" & ah_belief == "doesnt_dance") {
    return Categorical({
      ps: uncertain_doesnt_prob,
      vs: utterances
    })
  }
  else if (speaker_belief == "uncertain" & ah_belief == "uncertain") {
    return Categorical({
      ps: uncertain_uncertain_prob,
      vs: utterances
    })
  }
  else if (speaker_belief == "uncertain" & ah_belief == "null") {
    return Categorical({
      ps: uncertain_na_prob,
      vs: utterances
    })
  }
})

var viz_speaker = function (belief_tuple) {
  return Infer({
    method: "forward", samples: 4000, model: function () {
      sample(speaker(belief_tuple))
    }
  })
}

// display("p , p")
// viz.table(speaker({speaker_belief:"dances", ah_belief:"dances"}))
// display("p, not p")
// viz.table(speaker({speaker_belief:"dances", ah_belief:"doesnt_dance"}))
// display("not p, p")
// viz.table(speaker({speaker_belief:"doesnt_dance", ah_belief:"dances"}))
// display("not p, not p")
// viz.table(speaker({speaker_belief:"doesnt_dance", ah_belief:"doesnt_dance"}))
// viz.table(speaker({speaker_belief:"dances"}))
// viz.table(speaker({speaker_belief:"doesnt_dance"}))


var pragmaticListener = cache(function (utterance, item) {
  return Infer({
    model: function () {
      //////// priors ////////
      var speaker_belief = speaker_beliefPrior(item)
      var ah_belief = ah_beliefPrior(item)
      ////////////////////////
      var belief_tuple = { speaker_belief: speaker_belief, ah_belief: ah_belief }
      observe(speaker(belief_tuple), utterance)
      return belief_tuple
    }
  })
})

///
// display("know")
// var know = pragmaticListener("know-dances-?")
// display("speaker_belief")
// viz.table(marginalize(know, "speaker_belief"))
// display("ah_belief")
// viz.table(marginalize(know, "ah_belief"))

// display("know not")
// var know_not = pragmaticListener("know-doesnt_dance-?")
// display("speaker_belief")
// viz.table(marginalize(know_not, "speaker_belief"))
// display("ah_belief")
// viz.table(marginalize(know_not, "ah_belief"))

// display("think")
// var think = pragmaticListener("think-dances-?","Charley_H")
// display("speaker_belief")
// viz.table(marginalize(think, "speaker_belief"))
// display("ah_belief")
// viz.table(marginalize(think, "ah_belief"))

// display("think not")
// var think_not = pragmaticListener("think-doesnt_dance-?")
// display("speaker_belief")
// viz.table(marginalize(think_not, "speaker_belief"))
// display("ah_belief")
// viz.table(marginalize(think_not, "ah_belief"))

// display("BARE")
// var bare = pragmaticListener("BARE-dances-?")
// display("speaker_belief")
// viz.table(marginalize(bare, "speaker_belief"))
// display("ah_belief")
// viz.table(marginalize(bare, "ah_belief"))
